# vi:syntax=gitconfig

[alias]
	# View the current working tree status using the short format and current branch
	s = status -sb
	st = status -sb

	# From Jess Frazelle https://github.com/jessfraz/dotfiles/blob/master/.gitconfig
	# View abbreviated SHA, description, and history graph of the latest 20 commits
	l = log --pretty=format:"%h%x09%an%x09%ad%x09%s" -n 20 --graph --abbrev-commit --date=relative

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

	# Color graph log view
	graph = log --graph --color --pretty=format:"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n"

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"

	# Find branches containing commit
	fb = "!f() { git branch -a --contains $1; }; f"

	# Find tags containing commit
	ft = "!f() { git describe --always --contains $1; }; f"

	# Find commits by source code
	fc = "!f() { git log --pretty=format:'%C(yellow)%h	%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

	# Find commits by commit message
	fm = "!f() { git log --pretty=format:'%C(yellow)%h	%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"
	
	# From Seth Vargo https://gist.github.com/sethvargo/6b2f7b592853381690bfe3bd00947e8f
	# Show top contributors	
	top = !git log --format=format:%an | sort | uniq -c | sort -r | head -n 20

	# From Trevor Bramble https://twitter.com/TrevorBramble/status/774292970681937920
	alias=!git config -l | grep ^alias | cut -c 7- | sort

[core]
	# Default editor
	editor = vim 
	excludesfile = ~/.config/git/ignore

